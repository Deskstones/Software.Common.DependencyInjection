name: Publish NuGet Package

on:
  push:
    branches:
      - main  # Change this if you want to trigger on a different branch

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    env:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      PACKAGE_NAME: DSK.Common.DependencyInjection
      PACKAGE_VERSION: 1.0.0
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Optional: Debug step to confirm the solution file is in the repo root.
      - name: List root directory files
        run: ls -la

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'  # Adjust if targeting a different SDK version

      # Restore dependencies using your solution file located at the repository root.
      - name: Restore dependencies
        run: dotnet restore DSK.Common.DependencyInjection.sln

      # Build the solution in Release configuration.
      - name: Build solution
        run: dotnet build DSK.Common.DependencyInjection.sln --configuration Release

      # Pack the project using the project file path from your repository.
      - name: Pack the project
        run: dotnet pack src/DSK.Common.DependencyInjection/DSK.Common.DependencyInjection.csproj --configuration Release --no-build -o ./nupkgs /p:PackageVersion=${{ env.PACKAGE_VERSION }}

      # Optional: List generated packages to verify that the package was created.
      - name: List generated packages
        run: ls -la ./nupkgs

      # Push the NuGet package using the constructed file name.
      - name: Push NuGet package to GitHub Packages
        run: |
          dotnet nuget push ./nupkgs/${{ env.PACKAGE_NAME }}.${{ env.PACKAGE_VERSION }}.nupkg \
            --source "https://nuget.pkg.github.com/Deskstones/index.json" \
            --api-key "$NUGET_API_KEY"
